{% extends 'index' %}

{% block 'main' %}

.hero-unit

  %h1 Host on Heroku

  %br

  %p
    The installation on Heroku is pretty simple and it only requires a Heroku (free) / Amazon S3 (inexpensive) account.


.alert
  We assume that you installed
  %strong Heroku
  on your machine. Follow this
  %strong
    %a{ :href => 'http://devcenter.heroku.com/articles/quickstart' } link
  if you have not.

.alert
  We also assume that you followed the
  %strong
    %a{ :href => 'getting_started' } instructions
  to install the engine.


/ === 1 ===

%h3 1. Add the Heroku extension

%br

%p
  Open your
  %strong Gemfile
  file in your LocomotiveCMS application and add the following statement right after the one about the LocomotiveCMS engine.

%pre
  gem 'locomotive-heroku', '~> 0.0.2', :require => 'locomotive/heroku'

  gem 'thin', :group => 'production'

%p
  While you're at it, add the following line right before your first gem entry

%pre
  ruby '1.9.3'

%p
  Then, in your terminal, run

%pre
  gem install bundler --pre
  bundle install

%hr

/ === 2 ===

%h3 2. Create the Heroku app from your app folder

%br

%pre
  git init .
  heroku create &lt;YOUR APP NAME&gt;
  heroku config:add BUNDLE_WITHOUT=development:test

%hr

/ === 3 ===

%h3 3. Set up a remote Mongodb database

%br

%p
  You can find more information
  %a{ :href => 'http://docs.heroku.com/mongohq' } here.

%pre
  heroku addons:add mongohq:sandbox

%p
  Modify the configuration for the production mongodb database in the
  %strong config/mongoid.yml
  file.

%pre
  :plain
    production:
      uri: <%= ENV['MONGOHQ_URL'] %>

%hr

/ === 4 ===

%h3 4. Enable emails

%br

%p
  LocomotiveCMS needs to send emails and Heroku provides a nice way to send emails for free without configuring a whole mail server on your own.
  You can find more information
  %a{ :href => 'http://docs.heroku.com/sendgrid' } here.

%pre
  heroku addons:add sendgrid:starter

%p
  Add the following lines in your
  %strong config/environments/production.rb
  file.

%pre
  :plain
    config.action_mailer.delivery_method = :smtp
    config.action_mailer.smtp_settings = {
      :address        => 'smtp.sendgrid.net',
      :port           => 25,
      :authentication => :plain,
      :user_name      => ENV['SENDGRID_USERNAME'],
      :password       => ENV['SENDGRID_PASSWORD'],
      :domain         => ENV['SENDGRID_DOMAIN']
    }

%hr

/ === 5 ===

%h3 5. Configure Heroku to work with your Amazon S3 credentials

%br

%p
  Unless you modified your
  %strong config/initializers/carrierwave.rb
  file, Carrierwave should be set up for Amazon S3 in the production environment.

%pre
  heroku config:add S3_KEY_ID=&lt;YOUR S3 KEY ID&gt;
  heroku config:add S3_SECRET_KEY=&lt;YOUR S3 SECRET KEY&gt;
  heroku config:add S3_BUCKET=&lt;YOUR S3 BUCKET NAME&gt;
  heroku config:add S3_BUCKET_REGION=&lt;YOUR S3 BUCKET REGION&gt;
.alert.alert-info
  %strong Note:
  For S3 Bucket Region var, here is the 
  %a{ :href => "http://docs.amazonwebservices.com/general/latest/gr/rande.html" }
    correspondance table 
  between your 'human' bucket region name, and it's endpoint :
  
%table.table.table-bordered.table-striped
  %thead
    %tr
      %th Region
      %th Location Constraint
  %tbody
    %tr
      %td US Standard *
      %td --
    %tr
      %td US West (Oregon) Region
      %td us-west-2
    %tr
      %td US West (Northern California) Region
      %td us-west-1
    %tr
      %td EU (Ireland) Region
      %td eu-west-1
    %tr
      %td Asia Pacific (Singapore) Region
      %td ap-southeast-1
    %tr 
      %td Asia Pacific (Tokyo) Region
      %td ap-northeast-1
    %tr
      %td South America (Sao Paulo) Region
      %td sa-east-1


  

%hr

/ === 6 ===

%h3 6. Edit your Locomotive config file.

%br

%p
  Open your
  %strong config/initializers/locomotive.rb
  file and add the following lines

%pre
  :plain
    config.hosting = {
      :target     => :heroku,
      :api_key    => ENV['HEROKU_API_KEY'],
      :app_name   => ENV['HEROKU_APP_NAME']
    }
    


%br

.alert.alert-info
  %strong Note:
  the following configuration is in the case you host a single website. If you want to use LocomotiveCMS as a multi-sites platform, you have to uncomment the lines relative to the multi-sites option and set your main domain name (ex: mycmsplatform.com).

%hr

/ === 7 ===

%h3 7. Configure Heroku credentials

%br

%p Specify your credentials :

%pre
  heroku config:add HEROKU_API_KEY=&lt;YOUR HEROKU API KEY&gt;
  heroku config:add HEROKU_APP_NAME=&lt;YOUR APP NAME&gt;

%br

.alert.alert-info
  %strong Note:
  Go to your
  %a{ :href => 'https://api.heroku.com/account' } Heroku account
  to get your API key.

/ === 8 ===

%h3 8. Pre-compile your assets

%br

%p
  We suggest you to compile your assets locally so that if there is an issue with your assets, you will be able to debug it more easily.
  %br
  It is very important that you disable the
  %b initialize_on_precompile
  option in the
  %b config/application.rb
  file of your application:

%pre
  :plain
    module YourApplication
      class Application < Rails::Application
        ...
        config.assets.initialize_on_precompile = false
        ...
      end
    end

%p
  Then, in your terminal, run the following command

%pre
  bundle exec rake assets:precompile

%hr

/ === 9 ===

%h3 9. Launch it !

%br

%p In your terminal,

%pre
  git add .
  git commit -am "launch it"
  git push heroku master

%p
  Then, visit your application

%pre
  heroku open


{% endblock %}